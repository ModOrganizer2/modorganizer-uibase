@PACKAGE_INIT@

set(_UIBASE_PREFIX_DIR ${PACKAGE_PREFIX_DIR})

find_package(Qt6 CONFIG REQUIRED COMPONENTS Network QuickWidgets Widgets)

include ( "${CMAKE_CURRENT_LIST_DIR}/mo2-uibase-targets.cmake" )

get_target_property(_UIBASE_CONFIGURATIONS mo2::uibase IMPORTED_CONFIGURATIONS)

# uibase is usually be build in Debug or Release/RelWithDebInfo, so we need to map
# missing configurations to avoid issue with CMP0111
list(FIND _UIBASE_CONFIGURATIONS "RELEASE" _UIBASE_HAS_RELEASE)
if (_UIBASE_HAS_RELEASE EQUAL -1)
    set_target_properties(mo2::uibase PROPERTIES
        MAP_IMPORTED_CONFIG_MINSIZEREL RelWithDebInfo
        MAP_IMPORTED_CONFIG_RELEASE    RelWithDebInfo
    )
    set_property(TARGET mo2::uibase APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)
    set_property(TARGET mo2::uibase APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
else()
    set_target_properties(mo2::uibase PROPERTIES
        MAP_IMPORTED_CONFIG_MINSIZEREL      Release
        MAP_IMPORTED_CONFIG_RELWITHDEBINFO  Release
    )
    set_property(TARGET mo2::uibase APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)
    set_property(TARGET mo2::uibase APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
endif()

if (MO2_CMAKE_DEPRECATED_UIBASE_INCLUDE)
    target_include_directories(mo2::uibase INTERFACE
        ${_UIBASE_PREFIX_DIR}/include/uibase ${_UIBASE_PREFIX_DIR}/include/uibase/game_features)
endif()
